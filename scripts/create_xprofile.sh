#!/bin/bash

# Script to create or update .xprofile with HiDPI settings
# This will add environment variables needed for proper HiDPI scaling
# across different application frameworks

# Log file for debugging
LOG_FILE="$HOME/.config/awesome/hidpi_scaling.log"

# Timestamp for log
echo "$(date): Running create_xprofile.sh" >> "$LOG_FILE"

# Target file
XPROFILE="$HOME/.xprofile"

# Backup existing file if it exists
if [ -f "$XPROFILE" ]; then
    BACKUP="${XPROFILE}.bak.$(date +%Y%m%d%H%M%S)"
    echo "Backing up existing .xprofile to $BACKUP" | tee -a "$LOG_FILE"
    cp "$XPROFILE" "$BACKUP"
fi

# Create or update .xprofile
cat > "$XPROFILE" << 'EOF'
# HiDPI settings for X11
# Generated by AwesomeWM HiDPI configuration script

# Set X resource DPI (192 is 2x scaling, 144 is 1.5x scaling)
echo "Xft.dpi: 192" | xrdb -merge

# For GTK applications
export GDK_SCALE=2
export GDK_DPI_SCALE=0.5

# For Qt applications
export QT_AUTO_SCREEN_SCALE_FACTOR=1
export QT_SCALE_FACTOR=2

# For Java applications
export _JAVA_OPTIONS='-Dsun.java2d.uiScale=2'

# For Electron applications (like VSCode, Discord, etc.)
export ELECTRON_FORCE_DEVICE_SCALE_FACTOR=2

# Load any existing settings that might have been overwritten
if [ -f "$HOME/.Xresources" ]; then
    xrdb -merge "$HOME/.Xresources"
fi
EOF

# Make executable
chmod +x "$XPROFILE"

echo "Created $XPROFILE with HiDPI settings" | tee -a "$LOG_FILE"
echo "You may need to log out and log back in for these settings to take effect."
echo "Alternatively, you can run: source $XPROFILE"

# Option to apply settings immediately
read -p "Do you want to apply these settings now? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "Applying settings now..." | tee -a "$LOG_FILE"
    source "$XPROFILE"
    echo "Settings applied. You may need to restart some applications for changes to take effect."
fi

exit 0 